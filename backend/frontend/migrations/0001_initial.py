# Generated by Django 4.2.2 on 2023-07-01 15:21

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Basket',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': 'корзина с заказом',
                'verbose_name_plural': 'корзины с заказами',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='', max_length=100, verbose_name='название категории')),
                ('is_subcategory', models.BooleanField(default=True, help_text='Для выбора подкатегорий необходимо снять галочку и сохранить выбор. После обновления страницы откроется доступ к подкатегориям', verbose_name='является подкатегорией')),
            ],
            options={
                'verbose_name': 'категория',
                'verbose_name_plural': 'категории',
            },
        ),
        migrations.CreateModel(
            name='CategoryImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('src', models.ImageField(blank=True, default=None, null=True, upload_to='categories_picture/', verbose_name='изображение категории')),
                ('alt', models.CharField(max_length=200, verbose_name='описание изображения')),
            ],
            options={
                'verbose_name': 'фотография категории',
                'verbose_name_plural': 'фотографии категорий',
            },
        ),
        migrations.CreateModel(
            name='DeliveryCost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(choices=[('Обычная', 'Обычная'), ('Экспресс', 'Экспресс'), ('Корзина', 'Корзина')], max_length=100, verbose_name='название величины')),
                ('money', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='сумма')),
                ('description', models.TextField(max_length=100, verbose_name='описание')),
            ],
            options={
                'verbose_name': 'стоимость доставки',
                'verbose_name_plural': 'стоимости доставки',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('orderId', models.AutoField(primary_key=True, serialize=False, unique=True, verbose_name='номер заказа')),
                ('createdAt', models.DateTimeField(auto_now_add=True, verbose_name='дата создания')),
                ('fullname', models.CharField(default='', max_length=100, verbose_name='заказчик')),
                ('email', models.EmailField(max_length=254, verbose_name='email')),
                ('phone', models.CharField(max_length=16, validators=[django.core.validators.RegexValidator(regex='^\\+?1?\\d{8,15}$')], verbose_name='телефон')),
                ('deliveryType', models.CharField(choices=[('', 'Not Chosen'), ('Обычная', 'Обычная'), ('Экспресс', 'Экспресс')], default='', max_length=20, verbose_name='тип доставки')),
                ('freeDelivery', models.BooleanField(default=False, verbose_name='бесплатная доставка')),
                ('paymentType', models.CharField(choices=[('', 'Not Chosen'), ('Онлайн картой', 'Онлайн картой'), ('Онлайн с чужого счета', 'Онлайн с чужого счета')], default='', max_length=40, verbose_name='способ оплаты')),
                ('totalCost', models.DecimalField(decimal_places=2, max_digits=20, verbose_name='стоимость товаров')),
                ('deliveryCost', models.DecimalField(decimal_places=2, default=0, max_digits=6, verbose_name='стоимость доставки')),
                ('status', models.CharField(choices=[('Заказ оплачен', 'Заказ оплачен'), ('Заказ не оплачен', 'Заказ не оплачен')], default='Заказ не оплачен', max_length=20, verbose_name='статус оплаты')),
                ('city', models.CharField(blank=True, max_length=40, verbose_name='город доставки')),
                ('address', models.CharField(blank=True, max_length=150, verbose_name='адрес доставки')),
            ],
            options={
                'verbose_name': 'заказ',
                'verbose_name_plural': 'заказы',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='цена')),
                ('count_in_stock', models.IntegerField(verbose_name='количество в наличии')),
                ('date', models.DateTimeField(auto_now_add=True, verbose_name='дата создания')),
                ('title', models.CharField(max_length=150, verbose_name='название')),
                ('description', models.CharField(max_length=150, verbose_name='краткое описание')),
                ('fullDescription', models.TextField(verbose_name='полное описание')),
                ('freeDelivery', models.BooleanField(default=False, verbose_name='бесплатная доставка')),
                ('rating', models.DecimalField(blank=True, decimal_places=1, default=0, max_digits=2, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)], verbose_name='рейтинг')),
                ('limited', models.BooleanField(default=False, verbose_name='ограниченный тираж')),
                ('banner', models.BooleanField(default=False, verbose_name='баннер на главной странице')),
                ('available', models.BooleanField(default=True, verbose_name='в наличии')),
                ('category', models.ForeignKey(default='', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='category', to='frontend.category', verbose_name='категория товара')),
            ],
            options={
                'verbose_name': 'товар',
                'verbose_name_plural': 'товары',
            },
        ),
        migrations.CreateModel(
            name='ProductImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.ImageField(upload_to='product_picture/', verbose_name='изображение товара')),
                ('alt', models.CharField(max_length=200, verbose_name='описание изображения')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'фотография товара',
                'verbose_name_plural': 'фотографии товаров',
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('author', models.CharField(default='', max_length=50, verbose_name='автор отзыва')),
                ('email', models.EmailField(default='', max_length=254, verbose_name='email автора')),
                ('text', models.TextField(default='', max_length=500, verbose_name='текст отзыва')),
                ('rate', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='оценка товара')),
                ('date', models.DateTimeField(auto_now_add=True, verbose_name='дата отзыва')),
            ],
            options={
                'verbose_name': 'отзыв',
                'verbose_name_plural': 'отзывы',
            },
        ),
        migrations.CreateModel(
            name='Specifications',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='название характеристики')),
                ('value', models.CharField(max_length=100, verbose_name='значение')),
            ],
            options={
                'verbose_name': 'характеристика',
                'verbose_name_plural': 'характеристики',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.CharField(max_length=50, primary_key=True, serialize=False, verbose_name='id тега')),
                ('name', models.CharField(default='', max_length=50, verbose_name='имя тега')),
            ],
            options={
                'verbose_name': 'тег',
                'verbose_name_plural': 'теги',
            },
        ),
        migrations.CreateModel(
            name='SaleProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('salePrice', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='цена со скидкой')),
                ('dateFrom', models.DateTimeField(verbose_name='дата начала распродажи')),
                ('dateTo', models.DateTimeField(verbose_name='дата окончания распродажи')),
                ('product', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='product_sale', to='frontend.product', verbose_name='товар')),
            ],
            options={
                'verbose_name': 'товар на распродаже',
                'verbose_name_plural': 'товары на распродаже',
            },
        ),
        migrations.AddField(
            model_name='product',
            name='images',
            field=models.ManyToManyField(blank=True, related_name='product_image', to='frontend.productimage', verbose_name='изображения товара'),
        ),
        migrations.AddField(
            model_name='product',
            name='reviews',
            field=models.ManyToManyField(blank=True, related_name='product_reviews', to='frontend.review', verbose_name='отзывы'),
        ),
        migrations.AddField(
            model_name='product',
            name='specifications',
            field=models.ManyToManyField(blank=True, related_name='product_specs', to='frontend.specifications', verbose_name='дополнительные характеристики'),
        ),
        migrations.AddField(
            model_name='product',
            name='tags',
            field=models.ManyToManyField(blank=True, related_name='product_tags', to='frontend.tag', verbose_name='тег'),
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(max_length=20, verbose_name='номер карты')),
                ('name', models.CharField(max_length=150, verbose_name='имя держателя карты')),
                ('month', models.CharField(max_length=2, verbose_name='месяц')),
                ('year', models.CharField(max_length=4, verbose_name='год')),
                ('code', models.CharField(max_length=10, verbose_name='cvv код')),
                ('status', models.BooleanField(default=False, verbose_name='статус оплаты')),
                ('createdAt', models.DateTimeField(auto_now_add=True, verbose_name='дата создания')),
                ('paid_for', models.DecimalField(decimal_places=2, default=0, max_digits=12, verbose_name='сумма платежа')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payment', to='frontend.order', verbose_name='заказ')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='пользователь')),
            ],
            options={
                'verbose_name': 'платеж',
                'verbose_name_plural': 'платежи',
            },
        ),
        migrations.CreateModel(
            name='OrderProducts',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('count_in_order', models.PositiveIntegerField(default=0, verbose_name='количество товара в заказе')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='frontend.order', verbose_name='заказ')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='frontend.product', verbose_name='товар')),
            ],
            options={
                'verbose_name': 'товар из заказа',
                'verbose_name_plural': 'все товары из заказа',
            },
        ),
        migrations.AddField(
            model_name='order',
            name='products',
            field=models.ManyToManyField(related_name='order_products', through='frontend.OrderProducts', to='frontend.product', verbose_name='товары в заказе'),
        ),
        migrations.AddField(
            model_name='order',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='пользователь'),
        ),
        migrations.AddField(
            model_name='category',
            name='image',
            field=models.OneToOneField(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='frontend.categoryimage', verbose_name='изображение категории'),
        ),
        migrations.AddField(
            model_name='category',
            name='subcategories',
            field=models.ManyToManyField(blank=True, default='', related_name='subcategory', to='frontend.category', verbose_name='подкатегории'),
        ),
        migrations.CreateModel(
            name='BasketProducts',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('count_in_basket', models.PositiveIntegerField(default=0, verbose_name='количество товара в корзине')),
                ('basket', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='frontend.basket', verbose_name='корзина')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='frontend.product', verbose_name='товар')),
            ],
            options={
                'verbose_name': 'товар из корзины',
                'verbose_name_plural': 'все товары из корзины',
            },
        ),
        migrations.AddField(
            model_name='basket',
            name='products',
            field=models.ManyToManyField(related_name='basket_products', through='frontend.BasketProducts', to='frontend.product', verbose_name='товары в корзине'),
        ),
        migrations.AddField(
            model_name='basket',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='покупатель'),
        ),
    ]
